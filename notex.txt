https://javascript30.com/

01 JavaScript Drum Kit                      [DOM&INTERFACE, CSS, AUDIO+VIDEO]
    - Array.from()
    -   elem.addEventListener('transitionend', f-n)
        elem.addEventListener('keydown', f-n)
    -   e.propertyName
        e.target.classList.remove()
        e.keyCode
    -   audio.currentTime
        audio.play();
02 JS and CSS Clock                         [FUNDAMENTALS, CSS] 
    - setInterval(f-n, 1000);
    -   let now = new Date();
        let sec = now.getSeconds();
        let min = now.getMinutes();
        let hour = now.getHours();
    - elem.style.transform = `rotate(${myDegree}deg)`;
03 CSS Variables                            [CSS, FUN+EXPERIMENTAL]
    - document.documentElement.style.setProperty(`--${this.name}`, this.value + suffix);
    - this.dataset
    - arr.forEach(
    -   elem.addEventListener('change', f-n));
        elem.addEventListener('mousemove', f-n));
04 Array Cardio Day 1                       [FUNDAMENTALS]
    - obj.filter()
    - obj.map()
    - obj.sort((a, b) => a.year - b.year);
    -   obj.reduce((accumulator, currentValue) => {
            let diff = currentValue.passed - currentValue.year;
            return accumulator + diff;
        }, 0);
    - arr.sort()
    - arr.reduce()
05 Flex Panel Gallery                       [CSS, DOM&INTERFACE]
    - this.classList.toggle();
    -   e.propertyName
        e.propertyName.includes()
    - elem.addEventListener('transitionend', f-n)
    - arr.forEach(el => {el.addEventListener('click', f-n);})
06 Type Ahead                               [DOM&INTERFACE]
    - fetch request
    - Array methods: filter(), map(), replace(), join(), 
    - String methods: match()
    - addEventListener
    - document.querySelector()
07 Array Cardio Day 2                       [FUNDAMENTALS]
    - Main Array methods:       some(), every(), find(), findIndex()
    - Additional Array methods: slice()
08 Fun with HTML5 Canvas                    [FUN&EXPERIMENTAL]
    - canvas, ctx
09 Dev Tools Domination                     [FUNDAMENTALS]
    - console.log()
    - console.warn()
    - console.error()
    - console.info()
    - console.assert()
    - console.clear()
    - console.dir()
    - console.groupCollapsed(), console.groupEnd()
    - console.count()
    - console.time(), console.timeEnd()
    - console.table(arr)
10 Hold Shift and Check Checkboxes          [DOM&INTERFACE]
    - document.querySelectorAll('')
    - e.shiftKey
    - arr.forEach()
    - this.checked
    - addEventListener
11 Custom Video Player                      [AUDIO&VIDEO]
    - document.querySelector() / document.querySelectorAll()
    - Video Properties: .paused, .duration, .currentTime 
    - Video Methods: play(), pause()
    - JS events: click/mousemove/mousedown/mouseup (mouse event), play/pause/timeupdate(media events)
    - 'element.offsetWidth' property, 'e.offsetX' property 
    - CSS 'flex-basis' property(initial length of a flexible item), ex. flex-basis: 100px;
    - dataset property
    - textContent property
12 Key Sequence Detection                   [FUNDAMENTALS]
    - JS events: keyup
    - e.key
    - Array methods: splice (with a negative index), includes
13 Slide in on Scroll                       [DOM&INTERFACE]
    - document.querySelectorAll()
    - forEach
    - window.scrollY / window.innerHeight / img.offsetTop
    - img.classList.add()
    - window.addEventListener('scroll', debounce(myFunc))
14 JavaScript References VS Copying         [FUNDAMENTALS]
    - strings, numbers and booleans
        let age = 100;
        let age2 = age;
        age = 200;      // age = 200, age2 = 100
        age2 = 300;     // age = 200, age2 = 300
    - arrays
        - References - the same way as above (will change both variables)
        - Copying - 4 ways:
            1) const team2 = players.slice()
            2) const team3 = [].concat(players)
            3) const team4 = [...players]
            4) const team5 = Array.from(players)
    - objects
        - References - the same way as above
        - Copying - 3 ways:
            1) const captain2 = Object.assign({}, person, { number: 99, age: 12 });
            2) const captain3 = { ...person };
            3) const captain4 = JSON.parse(JSON.stringify(person)); - not recommended way
15 LocalStorage                             [FUNDAMENTALS, DOM&INTERFACE]
    - The two mechanisms within Web Storage API are sessionStorage and localStorage.
    - addEventListener('submit')
    -   e.preventDefault();   // e.g. form, to stop refresh the page after clicking on submit
        input.value
        this.reset()
    -   localStorage.setItem('items', JSON.stringify(items));
        JSON.parse(localStorage.getItem('items'))
    - e.target.matches()    // related to event delegation
16 Mouse Move Shadow                        [DOM&INTERFACE, CSS]
    - .addEventListener('mousemove', f-n)
    - el.offsetWidth / el.offsetHeight, e.offsetX / e.offsetY, e.target.offsetLeft / e.target.offsetTop
    - text.style.textShadow = `${xWalk}px ${yWalk}px 0 rgba(255,0,255,0.7)`
17 Sort Without Articles                    [FUNDAMENTALS]
    - String methods: replace(), trim()
    - Array method: arr.sort((a, b) => (a > b ? 1 : -1)), map(), join()
    - regex /^a |the |an /i
    - elem.innerHTML = ``
18 Adding Up Times with Reduce              [FUNDAMENTALS]
    - convert NodeList into an array: Array.from(document.querySelectorAll())
    - Array methods: map(), reduce((total, vidSeconds) => total + vidSeconds)
    - String method: split(':'), parseFloat // to convert str into floating number
    -   Math.floor() - округлить к нижней границе, 
        Math.ceil() - округлить к верхней границе
19 Webcam Fun                               [HARDWARE ACCESS, FUN&EXPERIMENTAL, AUDIO&VIDEO]
    - Server: npm install -> npm start
    - [to get access to webcam] navigator.mediaDevices.getUserMedia({ video: true, audio: false }).then(stream => {video.srcObject = localMediaStream;video.play();})
    - setInterval(() => {......}, 16);
    - [canvas]  ctx.drawImage(video, 0, 0, width, height);
                ctx.getImageData(0, 0, width, height);
                ctx.putImageData(pixels, 0, 0);
                canvas.toDataURL('/image/jpeg')
    - elem.addEventListener('canplay', f-n)
20 Speech Detection                         [AUDIO&VIDEO, FUN&EXPERIMENTAL]
    - Server: npm install -> npm start
    -   const recognition = new SpeechRecognition();
        recognition.interimResults = true;
        recognition.lang = 'en-US'
        recognition.addEventListener('result', e => {});
        recognition.addEventListener('end', recognition.start);
        recognition.start();
    - elem.appendChild(innerElem), elem.insertBefore(innerElem, elem.childNodes[0]);
21 Geolocation                              [HARDWARE ACCESS]
    - Server: npm install -> npm start
    - navigator.geolocation.watchPosition(data => 
        {
            data.coords.speed
            data.coords.heading
        });
    - xcode -> Simulator
    - Safari -> Develop -> Simulator -> Console
22 Follow Along Link Highlighter            [DOM&INTERFACE, CSS]
    - elem.getBoundingClientRect()  - to get width/height of elem
    - elem.addEventListener('mouseenter', f-n);
    -   const highlight = document.createElement('span');
        highlight.classList.add('highlight');
        document.body.append(highlight);
23 Speech Synthesis                         [FUN&EXPERIMENTAL, AUDIO&VIDEO]
    - The Web Speech API has two parts: 
        SpeechSynthesis (Text-to-Speech), and 
        SpeechRecognition (Asynchronous Speech Recognition.)
    -   const msg = new SpeechSynthesisUtterance();                 // msg.text = document.querySelector('[name="text"]').value
        speechSynthesis.addEventListener('voiceschanged', f-n);     // this.getVoices()
        speechSynthesis.cancel();
        speechSynthesis.speak(msg);
24 Sticky Nav                               [DOM&INTERFACE, FUNDAMENTALS, CSS]
    -   elem.offsetTop
        elem.offsetHeight
    - window.scrollY
    -   document.body.style.paddingTop
        document.body.classList.add('myClassName')
        document.body.classList.remove
    - window.addEventListener('scroll', f-n)
25 Event Capture, Propagation, Bubbling and Once    [DOM&INTERFACE]
    - bubbling concept      // run the f-n on the way up        // When an event happens on an element, it first runs the handlers on it, then on its parent, then all the way up on other ancestors.
    - e.stopPropagation();  // "STOP BUBBLING
    - elem.addEventListener('click', f-n, { capture: false, once: true })
        capture: false,     // run the f-n on the way down rather than on the way up
        once: true          // to do click(or other event) once and never again
26 Stripe Follow Along Nav                  [DOM&INTERFACE, FUN&EXPERIMENTAL]
    -   this.classList.add('myClass');
        this.classList.remove('myClass');
    - setTimeout(()=>{}, 150);
    - elem.getBoundingClientRect();
    - elem.style.setProperty('height', `${coords.height}px`);
    -   elem.addEventListener('mouseenter', f-n);
        elem.addEventListener('mouseleave', f-n);
    - CSS:  
        transform: translate(10px, 10px);   // (x,y)
        transform: skew(10deg, 10deg);      // (x,y)
        transform: scale(2, 0.5);           // (x,y)
        transform: rotate(45deg);   
        transform: perspective(23rem);   
        transform: matrix(1, 2, -1, 1, 80, 80);   
27 Click and Drag                           [DOM&INTERFACE, FUNDAMENTALS]
    -   elem.addEventListener('mousedown', f-n)
        elem.addEventListener('mouseleave', f-n)
        elem.addEventListener('mouseup', f-n)
        elem.addEventListener('mousemove', f-n)
    -   e.pageX 
        elem.offsetLeft
        elem.scrollLeft
28 Video Speed Controller                   [AUDIO&VIDEO, FUN&EXPERIMENTAL]
    -   e.pageY
        this.offsetTop
        this.offsetHeight
    - Math.round()
    - myNumber.toFixed(2)
    - myVideo.playbackRate
    - elem.addEventListener('mousemove', f-n)
29 Countdown Timer                          [FUNDAMENTALS, CSS]
    -   setInterval(() => {},1000)
        clearInterval(setInterval_Variable);
    -   Date.now();
        new Date(myTimestamp).getHours()
        new Date(myTimestamp).getMinutes()
    -   Math.round()
        Math.floor()
        parseInt(myStr)
    - document.title
    - elem.textContent = 'test'
    - this.dataset.time
    - elem.addEventListener('submit', function(){
        e.preventDefault();
        ...
        this.reset();
    })
30 Whack A Mole                             [DOM&INTERFACE, CSS, FUN&EXPERIMENTAL]
    - Game, recursion
    -   Math.round()
        Math.random()
        Math.floor()
    - myStr.textContent
    - elem.classList.remove() / elem.classList.add()
    - setTimeout(()=>{}, 1000)
    - e.isTrusted    /* The event is trusted */
        true - when the event was generated by a user action, 
        false - when the event was created or modified by a script or dispatched via EventTarget.dispatchEvent().
    - this.parentNode (the parent node of the specified node)

31 Scroll to Accept [taken from https://beginnerjavascript.com/ course]
    - Intersection Observer API
        let observer = new IntersectionObserver(callback, options);
        IntersectionObserverEntry.intersectionRatio
        IntersectionObserver.unobserve()
        IntersectionObserver.observe()
    - button.disabled
    - elem.lastElementChild
32 - Tabs   [taken from https://beginnerjavascript.com/ course]
    - Array.from()
    - elem.setAttribute('aria-selected', false);
    - arr.forEach()
    - event.currentTarget
    - arr.find()
33 - Shopping List  [taken from https://beginnerjavascript.com/ course]

34 - Gallery    [taken from https://beginnerjavascript.com/ course]

35 - Slider [taken from https://beginnerjavascript.com/ course]